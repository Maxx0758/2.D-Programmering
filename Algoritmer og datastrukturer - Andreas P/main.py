from LIFO import Stack
from FIFO import Que

q = Que()

q.enqueue(1)
q.enqueue(2)
q.enqueue(3)
q.enqueue(4)
q.enqueue(5)
q.enqueue(6)
q.enqueue(7)
q.enqueue(8)
q.enqueue(9)
q.enqueue(10)
q.enqueue(11)
q.enqueue(12)
q.enqueue(13)


print(f'Q: {q.l=}')

first = q.dequeue()
seccond = q.dequeue()
last = q.dequeue()

print(f'Output: {first=}, {seccond=}, {last=}')

print(f'Q: {q.l=}')

test = q.dequeue()
print(f'Test: {test=}')
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()
test = q.dequeue()